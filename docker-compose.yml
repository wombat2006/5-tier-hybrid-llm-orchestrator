version: '3.8'

services:
  llm-orchestrator:
    build: .
    container_name: llm-orchestrator
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      # API Keys (set these in .env file or Docker secrets)
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - ALIBABA_ACCESS_KEY_ID=${ALIBABA_ACCESS_KEY_ID}
      - ALIBABA_ACCESS_KEY_SECRET=${ALIBABA_ACCESS_KEY_SECRET}
      - ALIBABA_REGION=${ALIBABA_REGION:-ap-northeast-1}
      - QWEN_ENDPOINT=${QWEN_ENDPOINT}
      # Optional external APIs
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY}
      - NEWS_API_KEY=${NEWS_API_KEY}
      # JWT Security
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - llm-data:/app/data
      - llm-logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - llm-network

  # Optional: Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: llm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - llm-network

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: llm-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - llm-orchestrator
    restart: unless-stopped
    networks:
      - llm-network

volumes:
  llm-data:
    driver: local
  llm-logs:
    driver: local
  redis-data:
    driver: local

networks:
  llm-network:
    driver: bridge